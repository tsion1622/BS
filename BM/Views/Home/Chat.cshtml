@* @{
    ViewBag.Title = "Contact";

}
<div class="card">
    <div class="card-body">
        <div class="container">
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
            <ul id="discussion"></ul>
        </div>
        <hr />
        @Html.TextBox("messageX")
        <input type="button" value="Submit" onclick="TestData()" />
    </div>
</div> *@
@* <div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h2>SignalR Chat</h2>
            <input type="text" id="userInput" placeholder="Enter your name" class="form-control" />
            <input type="text" id="messageInput" placeholder="Enter a message" class="form-control" />


            <button id="sendButton" class="btn btn-primary" onclick="TestData()" >Send</button>
            <ul id="messagesList" class="list-group"></ul>
        </div>
    </div>
</div>

 *@

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h2>@ViewData["Title"]</h2>
            <input type="text" id="userInput" placeholder="Enter your name" class="form-control" />
            <input type="text" id="messageInput" placeholder="Enter a message" class="form-control" />
            <button id="sendButton" class="btn btn-primary">Send</button>
            <ul id="messagesList" class="list-group"></ul>
        </div>
    </div>
</div>

@* @section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>

   @* *@  @* <script type="text/javascript">
        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder().withUrl("/notificationhub").build();

            connection.on("ReceiveMessage", function (user, message) {
                const msg = user + ": " + message;
                const li = $("<li>").text(msg);
                $("#messagesList").append(li);
            });

            connection.start().then(function () {
                $("#sendButton").prop("disabled", false);
            }).catch(function (err) {
                console.error(err.toString());
            });

            $("#sendButton").click(function () {
                const user = $("#userInput").val();
                const message = $("#messageInput").val();
                connection.invoke("SendMessage", user, message).catch(function (err) {
                    console.error(err.toString());
                });
                $("#messageInput").val("");
            });
        });
    </script> *@ 

 @*    <script type="text/javascript">


            $(function () {
                // Declare a proxy to reference the hub.
            var chat = $.connection.NotificationHub;
            // Create a function that the hub can call to broadcast messages.
                chat.client.broadcastMessage = function (name, message) {
                    // Html encode display name and message.
                    var encodedName = $('<div />').text(name).html();
                    var encodedMsg = $('<div />').text(message).html();
                    // Add the message to the page.
                    $('#discussion').append('<li><strong>' + encodedName
                        + '</strong>:  ' + encodedMsg + '</li>');
                };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        let user = $('#displayname').val();
                        let message = $('#message').val();

                        chat.server.send(user, message);
                        $('#message').val('').focus();
                    });
                });
            });

        function TestData() {
            let message = $("#messageX").val();
                $.ajax({
                    cache: false,
                    type: 'POST',
                url: '@Url.Action("SendMessage", "Home")',
                    data: { 'message': message},
                    async: false,
                    success: function () {

                    }
                });
        }
    </script>

} *@

@* @section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <script type="text/javascript">
        $(function () {
            // Create a connection to the NotificationHub.
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationhub") // Ensure you're using the correct URL for your Hub
                .build();

            // Function that the hub can call to broadcast messages.
            connection.on("ReceiveMessage", function (name, message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page.
                $('#messagesList').append('<li class="list-group-item"><strong>' + encodedName + '</strong>: ' + encodedMsg + '</li>');
            });

            // Get the user name and store it to prepend to messages.
            $('#userInput').val(prompt('Enter your name:', ''));
            // Set initial focus on message input box.
            $('#messageInput').focus();

            // Start the connection.
            connection.start().then(function () {
                $('#sendButton').click(function () {
                    let user = $('#userInput').val(); // Get the user name from the correct input
                    let message = $('#messageInput').val(); // Get the message from the correct input

                    // Call the server method
                    connection.invoke("Send", user, message).catch(function (err) {
                        console.error(err);
                    });

                    $('#messageInput').val('').focus(); // Clear and focus on the message input
                });
            }).catch(function (err) {
                return console.error(err.toString());
            });
        });

        function TestData() {
            let message = $("#messageX").val();
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("SendMessage", "Home")',
                data: { 'message': message },
                async: false,
                success: function () {
                    // Handle success
                }
            });
        }
    </script>
} *@
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script type="text/javascript">
        $(function () {
            // Create a connection to the NotificationHub.
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationhub")
                .build();

            // Function that the hub can call to broadcast messages.
            connection.on("ReceiveMessage", function (user, message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(user).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page.
                $('#messagesList').append('<li class="list-group-item"><strong>' + encodedName + '</strong>: ' + encodedMsg + '</li>');
            });

            // Start the connection.
            connection.start().then(function () {
                $('#sendButton').click(function () {
                    let user = $('#userInput').val(); // Get the user name
                    let message = $('#messageInput').val(); // Get the message

                    // Validate user inputs
                    if (user && message) {
                        // Call the server method
                        connection.invoke("Send", user, message).catch(function (err) {
                            console.error(err);
                        });

                        $('#messageInput').val('').focus(); // Clear and focus on the message input
                    } else {
                        alert("Please enter both name and message!");
                    }
                });
            }).catch(function (err) {
                return console.error(err.toString());
            });
        });
    </script>
}